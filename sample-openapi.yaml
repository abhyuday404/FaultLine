swagger: "2.0"
info:
  title: Sample API
  description: A sample API for testing FaultLine OpenAPI integration
  version: 1.0.0
host: jsonplaceholder.typicode.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users
      tags:
        - Users
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      summary: Create a new user
      description: Create a new user account
      tags:
        - Users
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User created successfully

  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
    put:
      summary: Update user
      description: Update an existing user
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete user
      description: Delete a user account
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '204':
          description: User deleted successfully

  /posts:
    get:
      summary: Get all posts
      description: Retrieve a list of all posts
      tags:
        - Posts
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Post'
    post:
      summary: Create a new post
      description: Create a new blog post
      tags:
        - Posts
      parameters:
        - name: post
          in: body
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '201':
          description: Post created successfully

  /posts/{id}:
    get:
      summary: Get post by ID
      description: Retrieve a specific post by its ID
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Post'
        '404':
          description: Post not found

  /comments:
    get:
      summary: Get all comments
      description: Retrieve a list of all comments
      tags:
        - Comments
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
        format: email
      username:
        type: string
      phone:
        type: string
      website:
        type: string
    required:
      - name
      - email

  Post:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      body:
        type: string
      userId:
        type: integer
        format: int64
    required:
      - title
      - body
      - userId

  Comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      postId:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
        format: email
      body:
        type: string
    required:
      - postId
      - name
      - email
      - body